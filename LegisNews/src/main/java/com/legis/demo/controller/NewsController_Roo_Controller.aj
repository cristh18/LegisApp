// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.legis.demo.controller;

import com.legis.demo.controller.NewsController;
import com.legis.demo.dao.CategoryDAO;
import com.legis.demo.dao.NewsDAO;
import com.legis.demo.domain.News;
import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect NewsController_Roo_Controller {
    
    @Autowired
    NewsDAO NewsController.newsDAO;
    
    @Autowired
    CategoryDAO NewsController.categoryDAO;
    
    @RequestMapping(method = RequestMethod.POST, produces = "text/html")
    public String NewsController.create(@Valid News news, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, news);
            return "news/create";
        }
        uiModel.asMap().clear();
        newsDAO.save(news);
        return "redirect:/news/" + encodeUrlPathSegment(news.getId_().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", produces = "text/html")
    public String NewsController.createForm(Model uiModel) {
        populateEditForm(uiModel, new News());
        return "news/create";
    }
    
    @RequestMapping(value = "/{id_}", produces = "text/html")
    public String NewsController.show(@PathVariable("id_") Long id_, Model uiModel) {
        uiModel.addAttribute("news", newsDAO.findOne(id_));
        uiModel.addAttribute("itemId", id_);
        return "news/show";
    }
    
    @RequestMapping(produces = "text/html")
    public String NewsController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("newsitems", News.findNewsEntries(firstResult, sizeNo, sortFieldName, sortOrder));
            float nrOfPages = (float) newsDAO.count() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("newsitems", News.findAllNews(sortFieldName, sortOrder));
        }
        return "news/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT, produces = "text/html")
    public String NewsController.update(@Valid News news, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, news);
            return "news/update";
        }
        uiModel.asMap().clear();
        newsDAO.save(news);
        return "redirect:/news/" + encodeUrlPathSegment(news.getId_().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{id_}", params = "form", produces = "text/html")
    public String NewsController.updateForm(@PathVariable("id_") Long id_, Model uiModel) {
        populateEditForm(uiModel, newsDAO.findOne(id_));
        return "news/update";
    }
    
    @RequestMapping(value = "/{id_}", method = RequestMethod.DELETE, produces = "text/html")
    public String NewsController.delete(@PathVariable("id_") Long id_, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        News news = newsDAO.findOne(id_);
        newsDAO.delete(news);
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/news";
    }
    
    void NewsController.populateEditForm(Model uiModel, News news) {
        uiModel.addAttribute("news", news);
        uiModel.addAttribute("categorys", categoryDAO.findAll());
    }
    
    String NewsController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
